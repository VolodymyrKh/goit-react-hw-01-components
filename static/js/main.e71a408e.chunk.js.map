{"version":3,"sources":["Components/User-profile/Profile.module.css","Components/Transaction-history/TransActionHistory.module.css","Components/Friend-list/FriendList.module.css","Components/Statistical-data/Statistics.module.css","Components/User-profile/Profile.js","Components/Statistical-data/Statistics.js","Components/Friend-list/FriendListItem.js","Components/Friend-list/FriendList.js","Components/Transaction-history/TransActionHistory.js","Components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","colors","Statistics","title","statistics","length","statList","map","stat","min","max","arrIndex","Math","floor","random","key","id","item","style","backgroundColor","percentage","defaultProps","FriendListItem","isOnline","onLine","offLine","width","FriendList","items","friendList","TransactionHistory","transactionHistory","tableHead","headBorder","index","bgColor","bgColorWhite","type","amount","currency","App","user","statisticalData","friends","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e71a408e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__11hjS\",\"profile\":\"Profile_profile__35B30\",\"description\":\"Profile_description__3Gi-c\",\"name\":\"Profile_name__I2414\",\"tag\":\"Profile_tag__3j9lV\",\"location\":\"Profile_location__UVT4n\",\"stats\":\"Profile_stats__3pwM1\",\"statsItem\":\"Profile_statsItem__11QpA\",\"label\":\"Profile_label__3rJae\",\"quantity\":\"Profile_quantity__3XVqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransActionHistory_transactionHistory__3KmFm\",\"border\":\"TransActionHistory_border__2sRn1\",\"tableHead\":\"TransActionHistory_tableHead__3hI4f\",\"headBorder\":\"TransActionHistory_headBorder__2hOWI\",\"bgColor\":\"TransActionHistory_bgColor__2Jh3O TransActionHistory_border__2sRn1\",\"bgColorWhite\":\"TransActionHistory_bgColorWhite__1R2p8 TransActionHistory_border__2sRn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1YISw\",\"item\":\"FriendList_item__3BM8z\",\"status\":\"FriendList_status__14Ygi\",\"onLine\":\"FriendList_onLine__1-F3_ FriendList_status__14Ygi\",\"offLine\":\"FriendList_offLine__3KGpi FriendList_status__14Ygi\",\"avatar\":\"FriendList_avatar__1OM5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1HWuC\",\"title\":\"Statistics_title__7rIws\",\"statList\":\"Statistics_statList__3NAvY\",\"item\":\"Statistics_item__2WbkI\",\"label\":\"Statistics_label__3I1cj\",\"percentage\":\"Statistics_percentage__2HB41\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css'\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst colors = [\r\n  '#a33cf2',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n  '#4fc4f6',\r\n  '#e64c65',\r\n];\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title.length > 0 && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => {\r\n        const arrIndex = randomIntegerFromInterval(0, colors.length - 1);\r\n        return (\r\n          <li\r\n            key={stat.id}\r\n            className={styles.item}\r\n            style={{ backgroundColor: colors[arrIndex] }}\r\n          >\r\n            <span className={styles.label}>{stat.label}</span>\r\n            <span className={styles.percentage}>{stat.percentage}</span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css'\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <li className={styles.item}>\r\n    <span className={isOnline ? styles.onLine : styles.offLine}></span>\r\n    <img className={styles.avatar} src={avatar} alt=\"Friend img\" width=\"96\" />\r\n    <p className={styles.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport styles from './FriendList.module.css'\r\n\r\nconst FriendList = ({ items = [] }) => (\r\n  <ul className={styles.friendList}>\r\n    {items.map(item => (\r\n      <FriendListItem key={item.id} {...item} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransActionHistory.module.css'\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead className={styles.tableHead}>\r\n      <tr>\r\n        <th className = {styles.headBorder}>Type</th>\r\n        <th className = {styles.headBorder}>Amount</th>\r\n        <th className = {styles.headBorder}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map((item,index) => (\r\n        <tr key={item.id} className = {index % 2 !==0 ? styles.bgColor : styles.bgColorWhite} >\r\n          <td className = {styles.headBorder}>{item.type}</td>\r\n          <td className = {styles.headBorder}>{item.amount}</td>\r\n          <td className = {styles.headBorder}>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './User-profile/Profile';\r\nimport Statistics from './Statistical-data/Statistics';\r\nimport FriendList from './Friend-list/FriendList';\r\nimport TransactionHistory from './Transaction-history/TransActionHistory';\r\nimport user from '../../src/user.json';\r\nimport statisticalData from '../../src/statistical-data.json';\r\nimport friends from '../../src/friends.json';\r\nimport transactions from '../../src/transactions.json';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile\r\n      {...user}\r\n      //   name={user.name}\r\n      //   tag={user.tag}\r\n      //   location={user.location}\r\n      //   avatar={user.avatar}\r\n      //   stats={user.stats}\r\n    />\r\n\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n\r\n    <FriendList items={friends} />\r\n\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}